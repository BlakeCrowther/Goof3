Goof3 {
    Program     = Block
    Block       = (Statement ":")+                                  -- standard
                | Function+
    Statement   = "goof" id "=="+ Exp                               -- assignment
                | "goof" id                                         -- declaration
                | VarExp "=="+ Exp                                  -- reassignment
                | "poof" "(" StringLit ")"                          -- print
                | "return" (Exp | VarExp)                           -- return
                | If
                | Function
    Function    = "phoof" id "(" ListOf<id, ","> ")" "}" Block "{"     -- declaration
    If          = "if" "(" Exp (logOp | relop) Exp ")" "}" Block "{"
    Exp         = Exp logOp Exp1                                     -- logical
                | Exp1
    Exp1        = Exp1 mulop Exp2                                   -- binary
                | Exp2
    Exp2        = VarExp
                | declit
                | intlit
                | StringLit
    VarExp      = id

    logOp       = "||" | "&&"
    relop       =  "<" "=" "=="*                                    -- leq
                | "<"                                               -- less
                | "=" "=="*                                         -- equal
                | "!=" "=="*                                        -- notequal
                | ">=" "=="*                                        -- greq
                | ">"                                               -- greater
    mulop       =  "*" | "/" | "%"
    id          = letter (alnum | "_")*
    StringLit   = "\"" alnum* "\""
    intlit      = digit+
    declit      = digit+ "." digit*
}