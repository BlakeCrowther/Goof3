[ GifStatement {
    tests:
     [ BinaryExpression {
         op: '<',
         left: Literal { type: 'whole_number', value: '1' },
         right:
          BinaryExpression {
            op: '==',
            left: Literal { type: 'whole_number', value: '4' },
            right: Literal { type: 'true_or_false', value: 'toof' } } },
       BinaryExpression {
         op: '=',
         left: Literal { type: 'whole_number', value: '5' },
         right: Literal { type: 'whole_number', value: '1' } } ],
    consequents:
     [ [ ReturnStatement {
           returnValue: Literal { type: 'array_of_chars', value: 'troof' } } ],
       [ ReturnStatement {
           returnValue: Literal { type: 'array_of_chars', value: 'foof' } } ] ],
    alternate:
     [ ReturnStatement {
         returnValue: Literal { type: 'array_of_chars', value: 'idk' } } ] } ]